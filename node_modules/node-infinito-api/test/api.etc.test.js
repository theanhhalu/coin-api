const { Helper } = require('node-infinito-util');
const InfinitoApi = require('../index');
const ConfigTest = require('./config.test');
const chai = require("chai");
chai.should();

const opts = {
  apiKey: ConfigTest.API_KEY,
  secret: ConfigTest.SECRECT,
  baseUrl: ConfigTest.BASE_URL,
  logLevel: ConfigTest.LOG_LEVEL
};

const addresses = {
  normal: "0xb61dd15607187399ac30736d924215ef5e8c392c",
  sc: "0x86fa049857e0209aa7d9e616f7eb3b3b78ecfdb0",
  addr_in_sc: "0x00c097f24ae4dd09359f87d85bc883a72a5a46c7"
};

var rawtx = "0xf8698310000080830493e09479e67b2c14fd97d62b8fa796a58e7bbf898757c4865af3107a4000801ca0f4db33b3d3497ac312b20ab81776497af907d06f2c5aec373dfc77e1e1337267a018c38cd0a2d5c0684392f0f597a8da16a4098fe2492dba1e498b44e7d32bd2e0";
var api = null;
var coinAPI = null;

describe('api.etc', async () => {

  beforeEach(async () => {
    api = new InfinitoApi(opts);
    coinAPI = api.ETC;
  });

  it('#getTxAddress(address)', async () => {
    let info = await coinAPI.getTxAddress(addresses.normal);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('total');
    info.data.should.have.property('from');
    info.data.should.have.property('to');
    info.data.should.have.property('transactions');
  });

  it('#getInternalTxAddress(address)', async () => {
    let info = await coinAPI.getInternalTxAddress(addresses.normal);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('total');
    info.data.should.have.property('from');
    info.data.should.have.property('to');
    info.data.should.have.property('transactions');
  });

  it('#getTxCount(address)', async () => {
    let info = await coinAPI.getTxCount(addresses.normal);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('tx_count');
  });

  it('#getNonce(address)', async () => {
    let info = await coinAPI.getNonce(addresses.normal);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('nonce');
  });

  it('#getBalance(address)', async () => {
    let info = await coinAPI.getBalance(addresses.normal);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('addr');
    info.data.should.have.property('balance');
  });

  it('#getContract()', async () => {
    let info = await coinAPI.getContract();
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('total');
    info.data.should.have.property('from');
    info.data.should.have.property('to');
    info.data.should.have.property('contracts');
  });

  it('#getSmartContractInfo(sc)', async () => {
    let info = await coinAPI.getSmartContractInfo(addresses.sc);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('address');
    info.data.should.have.property('name');
    info.data.should.have.property('symbol');
    info.data.should.have.property('decimals');
    info.data.should.have.property('total_supply');
  });

  it('#getContractHistory(sc)', async () => {
    let info = await coinAPI.getContractHistory(addresses.sc);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('total');
    info.data.should.have.property('from');
    info.data.should.have.property('to');
    info.data.should.have.property('transactions');
  });

  it('#getContractBalance(sc, addr_in_sc)', async () => {
    let info = await coinAPI.getContractBalance(addresses.sc, addresses.addr_in_sc);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('addr');
    info.data.should.have.property('balance');
  });

  it('#sendTransaction(rawtx)', async () => {
    let info = await coinAPI.sendTransaction({rawtx: rawtx});
    // console.log(info);
    info.should.have.property('cd');
  });

});