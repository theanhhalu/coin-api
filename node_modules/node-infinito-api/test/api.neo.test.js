const { Helper } = require('node-infinito-util');
const InfinitoApi = require('../index');
const ConfigTest = require('./config.test');
const chai = require("chai");
chai.should();

const opts = {
  apiKey: ConfigTest.API_KEY,
  secret: ConfigTest.SECRECT,
  baseUrl: ConfigTest.BASE_URL,
  logLevel: ConfigTest.LOG_LEVEL
};

const addresses = {
  normal: "AMAvaXFKtowxB5VpJ928QCSLZD9iMRnhbo",
  asset_id: "602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7",
  sc: "591f92493cd6dd003470e41376f79a515abc707f",
  addr_in_sc: "AeDQmb8rXGhAC12FstLKrFVnd1vJbwvaow"
};

var rawtx = "020001845a0035838e0d68715ae76598b905e7b027b80c7b7fd278c68933041edbcc3d0000000001e72d286979ee6cb1b7e65dfddfb2e384100b8d148e7758de42e4168b71792c60b4830e5000000000fc87b24c2acb14d737b8710b8dca556e954ee7ed014140387650802211b9e42cfe640f320d2add4fffffbb5e265de93aa78d6f402f4e5b2a1bbea9c463a20476cf7541241ef940b4c4c4b9923aafa675c59a1b9e47193c2321032bc788220164ffcf686b2f9d407e4f1618f2424bfd3006d355860d47ab6de9ccac";

var api = null;
var coinAPI = null;

describe('api.neo', async () => {

  beforeEach(async () => {
    api = new InfinitoApi(opts);
    coinAPI = api.NEO;
  });

  it('#getBalance(address)', async () => {
    let info = await coinAPI.getBalance(addresses.normal, addresses.asset_id);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('addr');
    info.data.should.have.property('assets');
  });

  it('#getHistory(address)', async () => {
    let info = await coinAPI.getHistory(addresses.normal, 0, 9);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('total');
    info.data.should.have.property('from');
    info.data.should.have.property('to');
    info.data.should.have.property('transactions');
  });

  it('#getUtxo(address)', async () => {
    let info = await coinAPI.getUtxo(addresses.normal, addresses.asset_id);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('transactions');
  });

  it('#getClaimableGas(address)', async () => {
    let info = await coinAPI.getClaimableGas(addresses.normal);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('transactions');
  });

  it('#getUnclaimedGas(address)', async () => {
    let info = await coinAPI.getUnclaimedGas(addresses.normal);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('addr');
    info.data.should.have.property('available');
    info.data.should.have.property('unavailable');
  });

  it('#sendTransaction()', async () => {
    let info = await coinAPI.sendTransaction({rawtx: rawtx});
    console.log(info);
    info.should.have.property('cd');
  });

  it('#getContractInfo(sc)', async () => {
    let info = await coinAPI.getContractInfo(addresses.sc);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('address');
    info.data.should.have.property('name');
    info.data.should.have.property('symbol');
    info.data.should.have.property('decimals');
    info.data.should.have.property('total_supply');
  });

  it('#getNEP5Balance(sc, addr_in_sc)', async () => {
    let info = await coinAPI.getNEP5Balance(addresses.sc, addresses.addr_in_sc);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('addr');
    info.data.should.have.property('balance');
  });

  it('#getNEP5History(sc, addr_in_sc)', async () => {
    let info = await coinAPI.getNEP5History(addresses.sc, addresses.addr_in_sc, 0, 9);
    // console.log(info);
    info.should.have.property('cd');
    info.should.have.property('data');
    info.data.should.have.property('total');
    info.data.should.have.property('from');
    info.data.should.have.property('to');
    info.data.should.have.property('transactions');
  });

});
